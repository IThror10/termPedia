events {
  worker_connections  1024;
}


http {
    include /etc/nginx/mime.types;

    # Define a cache zone named "my_cache" with 10MB of storage.
    proxy_cache_path /var/cache/nginx/my_cache levels=1:2 keys_zone=my_cache:10m inactive=60m;

    upstream balanced-apps {
        server backend-main:8080 weight=2;
        server backend-read-first:8080;
        server backend-read-second:8080;
    }

    upstream main-app {
        server backend-main:8080;
    }

    map $request_method $upstream_location {
        GET     balanced-apps;
        default main-app;
    }


    server {
        #init
        listen 9091;

        more_set_headers 'Server: TermPedia';
        gzip on;
        gzip_comp_level 5;


        #5.a
        location /api/v1/ {
            # Enable caching for GET requests.
            proxy_cache my_cache;

            # Use the "my_cache" zone to store cached responses.
            proxy_cache_key "$scheme$request_method$host$request_uri";

            # Set the cache expiration time to 5 minutes.
            proxy_cache_valid 200 5m;

            # Set the cache control headers.
            add_header Cache-Control "public, max-age=300";

            rewrite /api/v1/(.*)$ /api/$1 break;
            proxy_pass http://$upstream_location;
        }

        #5.b
        location = /api/v1/ {
            rewrite /api/v1/ /swagger/src break;
            proxy_pass http://$upstream_location;
        }

        location /swagger {
            proxy_pass http://$upstream_location;
        }

        location /swagger/docs {
            proxy_pass http://$upstream_location;
        }

        #5.d
        location = / {
            root /usr/share/nginx/static;
            index index.html;
        }

        #5.e
        location = /test {
            alias /usr/share/nginx/static;
        }

        #5.f
        location /admin/ {
#             proxy_set_header X-Script-Name /pgadmin4;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;

            proxy_pass http://pgadmin:80/browser;
        }

        #5.g
        location = /status {
            stub_status;
        }



        #7
        location /mirror1/api/v1/ {
            rewrite /mirror1/api/v1/(.*)$ /api/$1 break;
            proxy_pass http://mirror-backend-main:8080;
        }

        location = /mirror1/api/v1/ {
            rewrite /mirror1/api/v1/ /swagger/src break;
            proxy_pass http://mirror-backend-main:8080;
        }

        location /mirror1 {
            alias /usr/share/nginx/static;
        }

        location /mirror1/test {
            alias /usr/share/nginx/static;
        }

        location /mirror1/status {
            stub_status;
        }
    }
}
